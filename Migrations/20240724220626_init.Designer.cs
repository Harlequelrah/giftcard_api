// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using giftcard_api.Data;

#nullable disable

namespace giftcard_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240724220626_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("giftcard_api.Models.Beneficiary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Has_gochap")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdBeneficiaryWallet")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ProfilePhoto")
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.HasIndex("IdBeneficiaryWallet");

                    b.HasIndex("IdUser");

                    b.ToTable("Beneficiaries");
                });

            modelBuilder.Entity("giftcard_api.Models.BeneficiaryHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdBeneficiary")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdBeneficiary");

                    b.ToTable("BeneficiaryHistories");
                });

            modelBuilder.Entity("giftcard_api.Models.BeneficiaryWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Devise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Solde")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("BeneficiaryWallets");
                });

            modelBuilder.Entity("giftcard_api.Models.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdMerchantWallet")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ProfilePhoto")
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.HasIndex("IdMerchantWallet");

                    b.HasIndex("IdUser");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("giftcard_api.Models.MerchantHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMerchant")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdMerchant");

                    b.ToTable("MerchantHistories");
                });

            modelBuilder.Entity("giftcard_api.Models.MerchantWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Devise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Solde")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("MerchantWallets");
                });

            modelBuilder.Entity("giftcard_api.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Budget")
                        .HasColumnType("double");

                    b.Property<DateTime>("DateExpirations")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxCarte")
                        .HasColumnType("int");

                    b.Property<int>("MontantBase")
                        .HasColumnType("int");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("giftcard_api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleNom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("giftcard_api.Models.Subscriber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdSubscriberWallet")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("SubscriberName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdSubscriberWallet");

                    b.HasIndex("IdUser");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("giftcard_api.Models.SubscriberHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdSubscriber")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdSubscriber");

                    b.ToTable("SubscriberHistories");
                });

            modelBuilder.Entity("giftcard_api.Models.SubscriberWallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Devise")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Solde")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("SubscriberWallets");
                });

            modelBuilder.Entity("giftcard_api.Models.Subscription", b =>
                {
                    b.Property<int>("IdSubscriber")
                        .HasColumnType("int");

                    b.Property<int>("IdPackage")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateSouscription")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdSubscriber", "IdPackage");

                    b.HasIndex("IdPackage");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("giftcard_api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateInscription")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("giftcard_api.Models.Beneficiary", b =>
                {
                    b.HasOne("giftcard_api.Models.BeneficiaryWallet", "BeneficiaryWallet")
                        .WithMany()
                        .HasForeignKey("IdBeneficiaryWallet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("giftcard_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeneficiaryWallet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("giftcard_api.Models.BeneficiaryHistory", b =>
                {
                    b.HasOne("giftcard_api.Models.Beneficiary", "Beneficiary")
                        .WithMany("Histories")
                        .HasForeignKey("IdBeneficiary")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beneficiary");
                });

            modelBuilder.Entity("giftcard_api.Models.Merchant", b =>
                {
                    b.HasOne("giftcard_api.Models.MerchantWallet", "MerchantWallet")
                        .WithMany()
                        .HasForeignKey("IdMerchantWallet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("giftcard_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MerchantWallet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("giftcard_api.Models.MerchantHistory", b =>
                {
                    b.HasOne("giftcard_api.Models.Merchant", "Merchant")
                        .WithMany("Histories")
                        .HasForeignKey("IdMerchant")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("giftcard_api.Models.Subscriber", b =>
                {
                    b.HasOne("giftcard_api.Models.SubscriberWallet", "SubscriberWallet")
                        .WithMany()
                        .HasForeignKey("IdSubscriberWallet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("giftcard_api.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscriberWallet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("giftcard_api.Models.SubscriberHistory", b =>
                {
                    b.HasOne("giftcard_api.Models.Subscriber", "Subscriber")
                        .WithMany("Histories")
                        .HasForeignKey("IdSubscriber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("giftcard_api.Models.Subscription", b =>
                {
                    b.HasOne("giftcard_api.Models.Package", "Package")
                        .WithMany("Subscribers")
                        .HasForeignKey("IdPackage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("giftcard_api.Models.Subscriber", "Subscriber")
                        .WithMany("Packages")
                        .HasForeignKey("IdSubscriber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("giftcard_api.Models.User", b =>
                {
                    b.HasOne("giftcard_api.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("giftcard_api.Models.Beneficiary", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("giftcard_api.Models.Merchant", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("giftcard_api.Models.Package", b =>
                {
                    b.Navigation("Subscribers");
                });

            modelBuilder.Entity("giftcard_api.Models.Subscriber", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
